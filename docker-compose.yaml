networks:
  caddy:
services:
  db:
    image: postgres:13.2
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U mps -d menu_planning_service" ]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - "./db_data:/var/lib/postgresql/data"
    environment:
      LC_ALL: C.UTF-8
      POSTGRES_USER: mps
      POSTGRES_PASSWORD: fresh4you
      POSTGRES_DB: menu_planning_service
    networks:
      - caddy

  zookeeper:
    image: ghcr.io/arm64-compat/confluentinc/cp-zookeeper:6.2.4
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - caddy

  kafka:
    image: ghcr.io/arm64-compat/confluentinc/cp-kafka:6.2.4
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - "./add_avro_schemas.sh:/usr/local/bin/add_avro_schemas.sh"
      - "./pull_event_schemas.sh:/usr/local/bin/pull_event_schemas.sh"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "LISTENER_INTERNAL://kafka:29092,LISTENER_HOST://:9092"
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka:29092,LISTENER_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
      GITHUB_TOKEN: ${GITHUB_TOKEN}
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:29092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - caddy

  schema-registry:
    image: ghcr.io/arm64-compat/confluentinc/cp-schema-registry:6.2.4
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29092'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
    healthcheck:
      test: [ "CMD", "curl", "--fail", "localhost:8081" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - caddy

  outbox:
    image: ${DOCKER_URL}/outbox-worker-kafka:1.10.7
    ports:
      - '8889:8889'
    depends_on:
      db:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      SERVICE_NAME: 'menu-planning-service'
      DB_DSN: "postgres://mps@db:5432/menu_planning_service?sslmode=disable&timezone=UTC"
      DB_PASSWORD: "fresh4you"
      # port is based KAFKA_ADVERTISED_LISTENERS - externally it is 9092, but internally - 29092
      KAFKA_DSN: "kafka:29092"
      KAFKA_SECURITY_PROTOCOL: 'PLAINTEXT'
      AVRO_ENABLE_RAW: "true"
      AVRO_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      LOG_LEVEL: 'development'
    networks:
      - caddy

  api:
    image: ${DOCKER_URL}/menu-planning-service-api:${TAG:-latest}
    ports:
      - '8087:8080'
    depends_on:
      db:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - caddy

  api-init:
    image: ${DOCKER_URL}/menu-planning-service-cron:${TAG:-latest}
    depends_on:
      db:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    volumes:
      - "./wait_for_it.sh:/usr/local/bin/wait_for_it.sh"
    command: [ "wait_for_it.sh", "api:8080", "-s", "--timeout=60", "--", "/mps", "-task", "create-menus" ]
    env_file:
      - .env
    networks:
      - caddy

  caddy:
    image: caddy:latest
    ports:
      - '8080:8082'
    networks:
      - caddy